// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/retry_failed_swaps": {
            "post": {
                "description": "The Retry Failed Swaps API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "RetryFailedSwaps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SwapIDList",
                        "name": "swap_id_list",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RetryFailedSwapsResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        },
        "/admin/update_swap_pair": {
            "put": {
                "description": "The Update Swap Pair API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "UpdateSwapPairHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ERC20Addr",
                        "name": "erc20_addr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Available",
                        "name": "available",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LowerBound",
                        "name": "lower_bound",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UpperBound",
                        "name": "upper_bound",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IconUrl",
                        "name": "icon_url",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSwapPairResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        },
        "/admin/withdraw_token": {
            "post": {
                "description": "The With Draw Token API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "WithdrawToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain",
                        "name": "chain",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TokenAddr",
                        "name": "token_addr",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Recipient",
                        "name": "recipient",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.WithdrawTokenResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        },
        "/bridge/pegin/state": {
            "get": {
                "description": "The Price Signature API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bridge"
                ],
                "summary": "peginStateHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Network",
                        "name": "network",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PeginStateResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        },
        "/bridge/price": {
            "get": {
                "description": "The Price API Specifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bridge"
                ],
                "summary": "makePriceHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Quote",
                        "name": "quote",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PriceResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        },
        "/bridge/price/signature": {
            "get": {
                "description": "The Price Signature API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bridge"
                ],
                "summary": "makePriceSignatureHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Base",
                        "name": "base",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Quote",
                        "name": "quote",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fee",
                        "name": "fee",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exchange",
                        "name": "exchange",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PriceSignatureResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponseDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponseDto": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.PeginStateResponseDto": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "fee": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.PriceResponseDto": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "deadline": {
                    "type": "integer"
                },
                "exchange": {
                    "type": "string"
                },
                "fee": {
                    "type": "string"
                },
                "quote": {
                    "type": "string"
                }
            }
        },
        "dto.PriceSignatureResponseDto": {
            "type": "object",
            "properties": {
                "baseAgent": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                }
            }
        },
        "dto.RetryFailedSwapsResponseDto": {
            "type": "object",
            "properties": {
                "err_msg": {
                    "type": "string"
                },
                "rejected_swap_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "swap_id_list": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.UpdateSwapPairResponseDto": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "bep_20_addr": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "erc_20_addr": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "low_bound": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "record_hash": {
                    "type": "string"
                },
                "sponsor": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "upper_bound": {
                    "type": "string"
                }
            }
        },
        "dto.WithdrawTokenResponseDto": {
            "type": "object",
            "properties": {
                "err_msg": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "dev-totem-bridge-offchain-lidbscqqia-uc.a.run.app",
	BasePath:         "/api/v1",
	Schemes:          []string{"https", "http"},
	Title:            "Totem Bridge Off Chain API",
	Description:      "Totem Bridge Off Chain Service : This is a Bridge server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
